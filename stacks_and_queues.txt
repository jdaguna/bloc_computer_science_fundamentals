1. A stack uses LIFO whereas queue uses FIFO.

2. They both are used to manage and prioritize a list of tasks.

3. When implementing UNDO/REDO utilizing stacks, we can keep a list of commands that have been completed in stack-one.
UNDO: takes the last item in that stack and moves it to the bottom of stack-two.
REDO: takes the last item in stack-two and moves it into the bottom of stack-one.

This is using LIFO. Last in First Out.

Programming Questions:
1.
function reverseString(string){
result = [];
temp = string.split("");
for(let i = 0; i < temp.length; i++){
  result.unshift(temp[i]);
} 
return result.join("");
}

console.log(reverseString("Bloc!"));

2.

function pop(array){
 results = [];
 for (var i = 0; i<array.length-1; i++){
  results.push(array[i]); 	
 }
 return array[array.length-1]; 
}


console.log(pop([1,2,3]));

3.
Class Queue{
 constructor(){
  queue =[];
 }
 
 function enqueue(element){
  queue.push(element);
 }

 function dequeue(element){
  temp = queue[0];
  queue.splice(0,1);
  return temp; 
 }
}